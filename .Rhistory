title("Numeric Feature Variances")
graphics.off()
barplot(as.matrix(feature.vars), log="y", las=2, cex.names=0.65)
title("Numeric Feature Variances")
?heatmap
y = d.full[,SalePrice]
d.full = d.full[,-SalePrice]
d.full = fread("project/volume/data/interim/data_full.csv")
y = d.full[,SalePrice]
d.full = d.full[-SalePrice]
View(d.full)
source('~/dev/house_price_null_model/project/src/models/model_explore.R', echo=TRUE)
d.full <- subset(d.full, select = -c(SalePrice))
source('~/dev/house_price_null_model/project/src/models/model_explore.R', echo=TRUE)
?heatmap
heatmap(as.matrix(d.full))
colnames(d.full)
head(d.full)
d.numonly = subset(d.full, select = -c(BldgType, Heating, CentralAir))
head(d.numonly)
heatmap(as.matrix(d.numonly))
fit = lm(y ~ x1 + x2 + x3 + x4 + x5)
source('~/dev/house_price_null_model/project/src/models/model_explore.R', echo=TRUE)
plot(fit)
par(mfrow=c(2,2))
plot(fit)
par(mfrow=c(2,2))
plot(fit)
d.full = d.full[-6020,]
fit = lm(y ~ x1 + x2 + x3 + x4 + x5)
par(mfrow=c(2,2))
plot(fit)
cooks.distance(fit)
source('~/dev/house_price_null_model/project/required/requirements.R', echo=TRUE)
library("outliers")
?outlier
outlier(d.full)
head(d.full)
d.numonly = subset(d.full, select = -c(BldgType, Heating, CentralAir))
outlier(d.full)
outlier(d.numonly)
rm.outlier(d.numonly)
nrow(d.numonly)
dim(d.numonly)
outlier(d.numonly)
outlier(d.full)
tail(x5)
all(x5==0)
?subset
d.full = subset(d.full, subset=outlier(d.numonly, logical = T))
outlier(d.numonly, logical = T)
dim(outlier(d.numonly, logical = T))
outlier.vec = any(outlier(d.numonly, logical = T) == T)
?apply
?rowwise
d.full.nooutlier = d.full[which(apply(outlier(d.numonly, logical = T), 1, any)),]
View(d.full.nooutlier)
x1 = d.full.nooutlier[,LotArea]
x2 = d.full.nooutlier[,YearBuilt]
x3 = d.full.nooutlier[,TotalBsmtSF]
x4 = d.full.nooutlier[,GrLivArea]
x5 = d.full.nooutlier[,PoolArea]
fit = lm(y ~ x1 + x2 + x3 + x4 + x5)
dim(x1)
length(x1)
length(x2)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5)
y.nooutlier = y[which(apply(outlier(d.numonly, logical = T), 1, any)),]
which(apply(outlier(d.numonly, logical = T), 1, any))
outlier(d.numonly)
which(apply(outlier(d.numonly, logical = T), 1, any))
source('~/dev/house_price_null_model/project/src/models/model_explore.R', echo=TRUE)
y = d.full[,SalePrice]
fit = lm(y ~ x1 + x2 + x3 + x4 + x5)
source('~/dev/house_price_null_model/project/src/models/model_explore.R', echo=TRUE)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4)
summary(fit)
?glm
getwd()
fwrite(d.full.nooutlier, "./project/volume/data/processed/data_full_processed_nooutliers.csv")
sqrt(mean(fit$residuals^2))
?sample
d.full.nooutlier
head(d.full.nooutlier)
x6 = d.full.nooutlier[,Heating]
x7 = d.full.nooutlier[,CentralAir]
x8 = d.full.nooutlier[,BldgType]
fit = lm(y ~ x1 + x2 + x3 + x4 + x6)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x7)
summary(fit)
set(x7)
as.set(x7)
?set
library(sets)
as.set(x7)
as.set(x8)
fit = lm(y ~ x1 + x2 + x3 + x4 + x8)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + + x7 + x8)
summary(fit)
rm.outlier()
?rm.outlier
source('~/dev/house_price_null_model/project/src/features/build_features.r', echo=TRUE)
d.train = apply(d.train, rm.outlier)
d.train = apply(d.train, FUN=rm.outlier)
?apply
d.train = apply(d.train, FUN=rm.outlier, MARGIN = colnames(d.train))
d.train = apply(d.train, FUN=rm.outlier, MARGIN = 2)
d.train.numonly = subset(d.train, select = -c(BldgType, Heating, CentralAir))
d.train.numonly = subset(d.train, select = -c(BldgType, Heating, CentralAir))
d.test.numonly = subset(d.test, select = -c(BldgType, Heating, CentralAir))
d.train = apply(d.train, FUN=rm.outlier, MARGIN = 2)
d.train.numonly = apply(d.train, FUN=rm.outlier, MARGIN = 2)
head(d.train.numonly)
d.train.numonly = apply(d.train, as.numeric)
d.train.numonly = apply(d.train, FUN=as.numeric, MARGIN = 2)
View(d.train.numonly)
d.otrain = readWithParams("project/volume/data/raw/Stat_380_train.csv")
d.otest = readWithParams("project/volume/data/raw/Stat_380_train.csv")
source('~/dev/house_price_null_model/project/src/features/build_features.r', echo=TRUE)
source('~/dev/house_price_null_model/project/src/features/build_features.r', echo=TRUE)
source('~/dev/house_price_null_model/project/src/features/build_features.r', echo=TRUE)
View(d.train.numonly)
d.train.numonly = apply(d.train, FUN=as.numeric, MARGIN = 2)
View(d.train.numonly)
source('~/dev/house_price_null_model/project/src/features/build_features.r', echo=TRUE)
source('~/dev/house_price_null_model/project/src/features/build_features.r', echo=TRUE)
d.test.numonly = apply(d.test.numonly, FUN=as.numeric, MARGIN = 2)
source('~/dev/house_price_null_model/project/src/features/build_features.r', echo=TRUE)
d.train.numonly = apply(d.train, FUN=rm.outlier, MARGIN = 2)
d.train.nooutlier = d.full[which(apply(outlier(d.train.numonly, logical = T), 1, any)),]
d.test.nooutlier = d.full[which(apply(outlier(d.test.numonly, logical = T), 1, any)),]
source('~/dev/house_price_null_model/project/src/features/build_features.r', echo=TRUE)
source('~/dev/house_price_null_model/project/src/features/build_features.r', echo=TRUE)
fit = lm(y ~ x1 + x2 + x3 + x4 + + x7 + x8)
summary(fit)
fit = lm(y ~ x2 + x3 + x4 + + x7 + x8)
summary(fit)
fit = lm(y ~ x1 + x3 + x4 + + x7 + x8)
summary(fit)
fit = lm(y ~ x1 + x2 + x4 + x7 + x8)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x7 + x8)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x8)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x7)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5 + x7 + x8)
summary(fit)
fit = glm(y ~ x1 + x2 + x3 + x4 + x5 + x7 + x8, family = binomial(link = "logit"))
fit = glm(y ~ x1 + x2 + x3 + x4 + x5 + x7 + x8)
summary(fit)
fit = glm(y ~ x1 + x2 + x3 + x4 + x5)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5 + x8)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5 + x7)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x7)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 )
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5 + x7)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8)
summary(fit)
x1 = sqrt(d.train[,LotArea])
fit = lm(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5 + x6)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5)
x1 = apply(d.train[,LotArea], sqrt)
x2 = d.train[,YearBuilt]
x1 = apply(d.train[,LotArea], FUN=sqrt, MARGIN=2)
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
dim(x1)
d.test = fread("project/volume/data/interim/data_test.csv")
d.train = fread("project/volume/data/interim/data_train.csv")
d.test = fread("project/volume/data/interim/data_test.csv")
y = d.train[,SalePrice]
x1 = d.train[,LotArea]
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5 + x6)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5 + x7)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5)
summary(fit)
?predict.lm
predict.lm(fit, d.test)
predictions = predict.lm(fit, d.test)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5, data=d.train)
summary(fit)
predictions = predict.lm(fit, d.test)
View(predicion)
View(predictions)
summary(d.train[,SalePrice])
summary(predictions)
predictions = cbind(c(d.test[,Id], predictions))
View(predictions)
predictions = predict.lm(fit, d.test)
predictions = cbind(c(d.test[,Id], predictions))
predictions = predict.lm(fit, d.test)
predictions = cbind(d.test[,Id], predictions)
View(predictions)
?setNames
?names
predictions = setNames(predictions, c("Id", "Prediction"))
View(predictions)
predictions = setNames(predictions, c("Id", "Prediction"))
View(predictions)
?setNames
predictions = setNames(predictions, c("Id", "Prediction"))
View(predictions)
colnames(predictions) = c("Id", "Prediction")
View(predictions)
fwrite(predictions, "./project/predictions.csv")
source('~/dev/house_price_null_model/run_project.R', echo=TRUE)
colnames(predictions) = c("Id", "SalePrice")
fwrite(predictions, "./project/predictions.csv")
View(predictions)
predictions = predict.lm(fit, d.test)
#predictions = cbind(d.test[,Id], predictions)
colnames(predictions) = c(SalePrice")
#predictions = cbind(d.test[,Id], predictions)
colnames(predictions) = c("SalePrice")
#predictions = cbind(d.test[,Id], predictions)
colnames(predictions) = "SalePrice"
#predictions = cbind(d.test[,Id], predictions)
colnames(predictions) = "SalePrice"z
#predictions = cbind(d.test[,Id], predictions)
colnames(predictions) = "SalePrice"zfwrite(predictions, "./project/predictions.csv")
#predictions = cbind(d.test[,Id], predictions)
colnames(predictions) = "SalePrice"
#predictions = cbind(d.test[,Id], predictions)
names(predictions) = "SalePrice"
#predictions = cbind(d.test[,Id], predictions)
names(predictions)[1] = "SalePrice"
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
predictions = as.data.table(predict.lm(fit, d.test))
#predictions = cbind(d.test[,Id], predictions)
names(predictions)[1] = "SalePrice"
fwrite(predictions, "./project/predictions.csv")
d.test[,Id]
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
predictions = cbind(d.test[,Id]="Id", predictions)
predictions = cbind(d.test[,Id], predictions)
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
fwrite(predictions, "./project/predictions.csv")
fwrite(predictions, "./project/predictions.csv", row.names = F)
type(predictions[,Id])
typeof(predictions[,Id])
?round
predictions = as.data.table(apply(predict.lm(fit, d.test), 2))
predictions = cbind(d.test[,Id], predictions)
predictions = as.data.table(apply(predict.lm(fit, d.test),FUN=round, MARGIN = 2))
predictions = as.data.table(round(predict.lm(fit, d.test), 2))
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
length(predictions)
length(predictions[,])
length(predictions[,SalePrice])
source('~/dev/house_price_null_model/project/src/features/build_features.r', echo=TRUE)
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
length(predictions[,SalePrice])
fwrite(d.test.numonly, "~/dev/house_price_null_model/project/volume/data/interim/data_test.csv")
source('~/dev/house_price_null_model/project/src/features/build_features.r', echo=TRUE)
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
length(predictions[,SalePrice])
source('~/dev/house_price_null_model/project/src/features/build_features.r', echo=TRUE)
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
length(predictions[,SalePrice])
source('~/dev/house_price_null_model/project/src/features/build_features.r', echo=TRUE)
source('~/dev/house_price_null_model/project/src/features/build_features.r', echo=TRUE)
d.train.nooutlier = d.train[which(apply(outlier(d.train.numonly, logical = T), 1, any)),]
source('~/dev/house_price_null_model/project/src/features/build_features.r', echo=TRUE)
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
summary(fit)
sqrt(mean(fit$residuals^2))
fit = lm(y ~ x1 + x2 + x3 + x4 + x5 + x6, data=d.train)
summary(fit)
View(d.otest)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5 + x2:x4, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5 + x1:x3, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5, data=d.train)
summary(fit)
plot(fit)
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
fit = lm(y ~ x2 + x3 + x4 + x5, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x3 + x4 + x5, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 + x4 + x5, data=d.train)
fit = lm(y ~ x1 + x2 + x3 + x5, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x6, data=d.train)
fit = lm(y ~ x1 + x2 + x3 + x4 + x7, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x8, data=d.train)
summary(fit)
sqrt(mean(fit$residuals^2))
head(d.train)
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
fit = lm(y ~ x1 + x2 + x3 + x4 - x8, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 - x4 - x8, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 - x3 + x4 - x8, data=d.train)
summary(fit)
fit = lm(y ~ x1 - x2 + x3 + x4 - x8, data=d.train)
summary(fit)
+
fit = lm(y ~ x1 + x2 + x3 + x4 - x8, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x8, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x8, data=d.train)
summary(fit)
source('~/dev/house_price_null_model/project/src/features/build_features.r', echo=TRUE)
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
fit = lm(y ~ x1 + x2 + x3 + x4, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5 + x6, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x6 + x7 + x8, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x7 + x8, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x7 + x8, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5 + x7, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x5, data=d.train)
summary(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x5, data=d.train)
summary(fit)
source('~/dev/house_price_null_model/project/src/models/model_explore.R', echo=TRUE)
barplot(as.matrix(feature.vars), log="y", las=2, cex.names=0.65)
title("Numeric Feature Variances")
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
packages = c("data.table", "optparse","tidyr", "plyr", "outliers", "glmnet")
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())))
}
source('~/dev/house_price_null_model/project/src/features/build_features.r', echo=TRUE)
source('~/dev/house_price_null_model/project/src/features/build_features.r', echo=TRUE)
source('~/dev/house_price_null_model/project/required/requirements.R', echo=TRUE)
p.cor = cor(d.full[,-SalePrice])
d.full[,-SalePrice]
p.cor = cor(as.matrix(d.full[,-SalePrice]))
p.cor
as.matrix(d.full[,-SalePrice])
typeof(d.full)
d.full = fread("project/volume/data/interim/data_full.csv")
typeof(d.full)
class(d.full)
p.cor = cor(d.numonly)
corrplot.mixed(p.cor)
library("corrplot")
corrplot.mixed(p.cor)
?corrplot
corrplot(p.cor)
p.cor = cor(d.numonly[,-SalePrice])
corrplot(p.cor)
corrplot.mixed(p.cor)
corrplot(p.cor)
fit = lm(y ~ x1 + x2 + x3 + x4)
par(mfrow=c(2,2))
plot(fit)
sqrt(mean(fit$residuals^2))
fit = lm(y ~ x1 + x2 + x3 + x4 + x8:x6)
par(mfrow=c(2,2))
plot(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x6:x8)
par(mfrow=c(2,2))
plot(fit)
fit = lm(y ~ x1 + x2 + x3 + x4 + x6:x8 + x6:x7)
par(mfrow=c(2,2))
plot(fit)
sqrt(mean(fit$residuals^2))
corrplot(p.cor)
fit = lm(y ~ x1 - x4 + x2 + x3 + x6:x8 + x6:x7)
par(mfrow=c(2,2))
plot(fit)
sqrt(mean(fit$residuals^2))
fit = lm(y ~ x1 + x4 + x2 + x3 + x6:x8 + x6:x7)
par(mfrow=c(2,2))
plot(fit)
sqrt(mean(fit$residuals^2))
fit = lm(y ~ x1 + x4 + x2 + x3 + x6:x8)
par(mfrow=c(2,2))
plot(fit)
sqrt(mean(fit$residuals^2))
x1 = log(d.full.nooutlier[,OverallQual])
fit = lm(y ~ x1 + x4 + x2 + x3 + x6:x8 + x6:x7)
par(mfrow=c(2,2))
plot(fit)
sqrt(mean(fit$residuals^2))
source('~/dev/house_price_null_model/project/src/models/model_explore.R', echo=TRUE)
x1 = d.full.nooutlier[,OverallQual]
fit = lm(y ~ x1 + x4 + x2 + x3 + x6:x8 + x6:x7)
par(mfrow=c(2,2))
plot(fit)
y.nooutlier
source('~/dev/house_price_null_model/project/src/models/model_explore.R', echo=TRUE)
source('~/dev/house_price_null_model/project/src/models/model_explore.R', echo=TRUE)
fit = lm(y ~ x1 + x4 + x2 + x3)
par(mfrow=c(2,2))
plot(fit)
sqrt(mean(fit$residuals^2))
fit = lm(y ~ x1  + x2 + x3 + x4 + x1:x2)
par(mfrow=c(2,2))
plot(fit)
sqrt(mean(fit$residuals^2))
x1 = sqrt(d.full.nooutlier[,OverallQual])
fit = lm(y ~ x1  + x2 + x3 + x4 + x1:x2)
par(mfrow=c(2,2))
plot(fit)
sqrt(mean(fit$residuals^2))
source('~/dev/house_price_null_model/project/src/models/model_explore.R', echo=TRUE)
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
colnames(d.test)
?predict.lm
any(is.na(predicions))
any(is.na(predictions))
any(is.na(d.test))
colnames(d.train)
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
plot(fit)
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
colSums(is.na(d.test))
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
dim(d.train)
d.train = fread("project/volume/data/interim/data_train.csv")
dim(d.train)
dim(d.otrain)
?rm.outlier
View(d.train)
?aic
?bic
?cp
?AIC
nobs(fit)
AIC(fit)
BIC(fit)
plot(fit)
summary(fit)
source('~/dev/house_price_null_model/project/src/models/model_explore.R', echo=TRUE)
fit = lm(SalePrice ~ OverallQual + TotalBsmtSF
+ GrLivArea + poly(YearBuilt, 2) + OverallQual:YearBuilt, data=d.full.nooutlier)
source('~/dev/house_price_null_model/project/src/models/model_explore.R', echo=TRUE)
fit = lm(SalePrice ~ OverallQual + TotalBsmtSF
+ GrLivArea + poly(YearBuilt, 3) + OverallQual:YearBuilt, data=d.full.nooutlier)
par(mfrow=c(2,2))
plot(fit)
fit = lm(SalePrice ~ OverallQual + TotalBsmtSF
+ GrLivArea + poly(YearBuilt, 2) + OverallQual:YearBuilt, data=d.full.nooutlier)
par(mfrow=c(2,2))
plot(fit)
sqrt(mean(fit$residuals^2))
fit = lm(SalePrice ~ OverallQual + TotalBsmtSF
+ GrLivArea + YearBuilt + OverallQual:YearBuilt, data=d.full.nooutlier)
par(mfrow=c(2,2))
plot(fit)
sqrt(mean(fit$residuals^2))
fit = lm(SalePrice ~ OverallQual + TotalBsmtSF
+ GrLivArea + poly(YearBuilt, 2) + OverallQual:YearBuilt, data=d.full.nooutlier)
par(mfrow=c(2,2))
plot(fit)
sqrt(mean(fit$residuals^2))
fit = lm(SalePrice ~ OverallQual + TotalBsmtSF
+ GrLivArea + poly(YearBuilt, 3) + OverallQual:YearBuilt, data=d.full.nooutlier)
par(mfrow=c(2,2))
plot(fit)
sqrt(mean(fit$residuals^2))
source('~/dev/house_price_null_model/project/src/models/train_model.r', echo=TRUE)
?svm
??SVM
??SVR
source('~/dev/house_price_null_model/project/required/requirements.R', echo=TRUE)
source('~/dev/house_price_null_model/project/required/requirements.R', echo=TRUE)
